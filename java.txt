1.Check 2 arrays are equals.

package IDK;

public class repeat {
	public static void main(String[] args) {
		int counter=0;
		int arr1[]= {1,2,3,4,3,6,7,4,9};
		int arr2[]= {1,2,0,3,4,3,6,7,4,9};
		if(arr1.length==arr2.length) {
			for(int i=0;i<arr1.length;i++) {
				if (arr1[i]!=arr2[i]) {
					counter++;
					System.out.println("Different Arrays");
					break;
				}
			}if(counter==0) {
				System.out.println("Both are same");
			}
		}
		else {
			System.out.println("Different Arrays");
		}
	}
}
=================================================================================================================
2.array {1,2,4,3,5,6,7,9}; find out the missing element?
package IDK;

public class repeat {
	public static void main(String[] args) {
		int a[]= {1,2,4,3,5,6,7,9};
		int sum=0;
		for(int i=0;i<a.length;i++) {
			sum+=a[i];
		}
		int ex_sum=(a.length+1)*((a.length+2)/2);
		System.out.println(ex_sum-sum);
	}
		
}


===================================================================================================================
3.array {3,56,2,45,89,11,33} ; find out the smallest and largest element?
package IDK;

public class repeat {
	public static void main(String[] args) {
		for(int i=0;i<=arr1.length-1;i++) {
			for(int j=0;j<arr1.length-i-1;j++) {
				if(arr1[j]>arr1[j+1]) {
					int temp=arr1[j];
					arr1[j]=arr1[j+1];
					arr1[j+1]=temp;
				}
			}
		}
			System.out.println(arr1[0]+" is Smallest Number");
			System.out.println(arr1[arr1.length-1]+" is Largest Number");
	}
}


===================================================================================================================

4.array {1,2,3,4,5,6,7,8,9,10}  => {1,3,6,10,15,21,28,36,45,55}

package IDK;

public class repeat {
	public static void main(String[] args) {
		int a[]= {1,2,3,4,5,6,7,8,9,10};
		int b=0;
		for(int i=0;i<a.length;i++) {
			
			b=a[i]+b;
			System.out.println(b);
		}
		
	}
}
===================================================================================================================
5. array {1,4,2,5,6,2} => {9,11}

package IDK;

public class repeat {
	public static void main(String[] args) {
		int array[]= {1,4,2,5,6,2};
		int e_sum=0;
		int o_sum=0;
		for(int i=0;i<array.length;i++) {
			if(i%2==0) {
				e_sum+=array[i];
			}
			else {
				o_sum+=array[i];
			}
		}
		
		System.out.println(e_sum);
		System.out.println(o_sum);
	}
}
===================================================================================================================
=============================================================================================================================
1.Reverse of a string   ==> aswe  ===> ewsa

package reb;

public class col {
	
	public static void main(String[] args) {
		String str="aswe";
		String rev="";
		int n=str.length()-1;
		//
		for (int i=0;i<=n;i++) {
			char r=str.charAt(i);
			//System.out.println(r);
			rev=r+rev;
		}
		System.out.println(rev);
	}

}
=======================================================================================================================
2. Reverse of a integer      1232  ==> 2321

package reb;

public class col {
	
	public static void main(String[] args) {
		int num=1232;
		int rev=0;
		//
		while(num!=0) {
			int rem=num%10;
			rev=rev*10+rem;
			num=num/10;
		}
		System.out.println(rev);
	}

}
===============================================================================================================================
3. fibonacci series

package reb;

public class col {
	
	public static void main(String[] args) {
		int num=10,first=0,second=1,next;
		for(int i=0;i<=num;++i) {
			System.out.println(first);
			next=first+second;
			first=second;
			second=next;
		}
		
	}

}
=====================================================================================================================================
 4. no 7   =>                    *******
                                  ******
                                   *****
                                    ****
                                     ***
                                      **
                                       *


package reb;

public class col {
	
	public static void main(String[] args) {
		int row=7;
		for (int i= row; i>= 1; i--)
		{
			for (int j=row; j>i;j--)
			{
				System.out.print(" ");
			}
			for (int k=1;k<=i;k++)
			{
				System.out.print("*");
			}
			System.out.println("");
		}
	}

}

=====================================================================================================================================
5. a= 7
 
   a,a^2/2,a^3/3,a^4/4,a^5/5     ->  7,    (7*7)/2,  (7*7*7)/3   , (7*7*7*7)/4  , (7*7*7*7*7)/5


package reb;

public class col {
	
	public static void main(String[] args) {
		int a=7;
		float sum=0;
		for (int i=1;i<=5;i++) {
			sum+=(Math.pow(a,i))/i;
		}
		System.out.println(sum);
	}
}

=====================================================================================================================================

6. 100
   series of all prime number upto 100 -> 2, 3,5,7,11,13,17,19,23........100

package reb;

public class col {
	
	public static void main(String[] args) {
		int n=100; 
		for (int i=2;i<=n;i++) {
			int count=0;
			for(int j=2;j<=i;j++) {
				if(i%j==0) {
					count++;
				}
			}
			if(count==1) {
				System.out.println(i);
			}
		}
	}
}
=====================================================================================================================================
=====================================================================================================================================

1.int arr[]={56,34,87,56,23,98}  ->   87

package Overriding;

public class Find {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[]= {56,34,87,56,23,98};
		
		for (int i=0; i<arr.length;i++) {
			for(int j=0;j<arr.length-i-1;j++) {
				if(arr[j]>arr[j+1]) {
					int temp=arr[j];
					arr[j]=arr[j+1];
					arr[j+1]=temp;
				}
			}
		}
		System.out.println(arr[arr.length-2]);
	}
}
=====================================================================================================================================
2.int arr[]={45,54,76,8}
int arr[]={5,4,7,8}
 
{45,54,76,8,5,4,7,8}


package Overriding;

public class Merge {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int a[]={45,54,76,8};
		int b[]={5,4,7,8};
		int c[]= new int [a.length+b.length];
		int co=a.length;
		
		for(int i=0;i<a.length;i++) {
			c[i]=a[i];
		}
		for(int i=0;i<b.length;i++) {
			c[co+i]=b[i];
		}
		for (int i=0;i<c.length;i++) {
			System.out.println(c[i]);
		}
	}

}
=====================================================================================================================================
3. {6,7,8,3,6,7}---> 9 , 4th position
{6,7,8,3,9,6,7}


package Overriding;

public class Insertion {
	public static void main(String[] args) {
		int a[]={6,7,8,3,6,7};
		int n=4;
		int num=9;
		int b[]=new int [a.length+1];
		for(int i=0;i<=a.length;i++) {
			if(i<n) {
				b[i]=a[i];
			}
			else if(i==n){
				b[i]=num;
			}
			else {
				b[i]=a[i-1];
			}
		}
		for (int i=0;i<b.length;i++) {
			System.out.println(b[i]);
		}
	}

}
=====================================================================================================================================
1. strA="ASDFSDWDR";
   strB="AVHFGDAAAAHI";

O/P: 3

package reb;
import java.util.*;
public class Assignment {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	    String strA="ASDFSDWDR";
	    String strB="AVHFGDAAAAHI";
	    String str11 = "";
	    String str12 = "";
	    
	    int counter=0;
	    
	    char []ch1=strA.toCharArray();
	    char []ch2=strB.toCharArray();
//	    System.out.println(ch1);
	    for(int i=0;i<strA.length();i++) {
	    	if(!str11.contains(ch1[i]+""))
	    	{
	    		str11 += ch1[i];
	    	}
	    }
//	    System.out.println(str11);
	    for(int i=0; i<ch2.length; i++)
	    {
		    if(!str12.contains(ch2[i]+""))
		    {
		    	str12 += ch2[i];
		    }
	    }
//	    System.out.println(str12);
	    char[] ch11 = str11.toCharArray();
	    char[] ch12 = str12.toCharArray();
	    for(int i=0; i<ch11.length; i++)
	    {
		    for(int j=0; j<ch12.length; j++)
		    {
			    if(ch11[i] == ch12[j])
			    {
			    	counter++;
			    }
		    }
	    }
	    System.out.println(counter);
	    }

	}

=====================================================================================================================================